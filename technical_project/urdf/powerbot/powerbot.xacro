<?xml version="1.0"?>

<robot name="powerbot"
	xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
	xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
	xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
	xmlns:xacro="http://ros.org/wiki/xacro">



  <!-- Include powerbot wheels -->
  <xacro:include filename="$(find technical_project)/urdf/powerbot/powerbot_wheel.xacro"/>
  <!-- Include powerbot swivel wheels -->
  <xacro:include filename="$(find technical_project)/urdf/powerbot/powerbot_swivel_wheel.xacro"/>
  <!-- Include powerbot swivel balls -->
  <xacro:include filename="$(find technical_project)/urdf/powerbot/powerbot_swivel_ball.xacro"/>
  <!-- where to find all meshes -->
  <xacro:property name="mesh_directory" value="package://technical_project/meshes/p3dx_meshes"/>

  <!--bcz = base_center z value -->
  <xacro:property name="bcz" value="0.067"/> <!-- 0.148 -->


 <xacro:powerbot_swivel_ball suffix="left" parent="base_center" reflect="1"/>
  <xacro:powerbot_swivel_ball suffix="right" parent="base_center" reflect="-1"/>


  <xacro:powerbot_wheel suffix="left" parent="base_center" reflect="1"/>
  <xacro:powerbot_wheel suffix="right" parent="base_center" reflect="-1"/>


<!-- Top -->
	<joint name="base_top_joint" type="fixed">
		<!--origin xyz="-0.045 0 0.325" rpy="0 0 0"/-->
		<origin xyz="-0.045 0 0.277" rpy="0 0 0"/>
		<parent link="base_center"/>
		<child link="top_plate"/>
	</joint>

<!-- Top plate -->
	<link name="top_plate">
		<inertial>
			<mass value="0.1"/>	
			<origin xyz="0 0 0"/>
			<inertia ixx="1" ixy="0" ixz="0"
				 iyy="1" iyz="0"
 				izz="1"/>
		</inertial>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry name="top_geom">
				<mesh filename="${mesh_directory}/top.stl"/>
			</geometry>
		</visual>
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<mesh filename="${mesh_directory}/top.stl" />
			</geometry>
		</collision>
	</link>
	<gazebo reference="top_plate">
		<material value="Gazebo/Black"/>
	</gazebo>

<!-- Chassis -->
<link name="base_center">
	<inertial>
	  <mass value="1200.0"/>
	  <origin xyz="-0.045 0 ${bcz}"/>
	  <inertia ixx="1" ixy="0.0"    ixz="0.0"
		   		iyy="1" iyz="0.0"
	          			     izz="1"/>
	</inertial>
		<visual>
			<origin xyz="-0.045 0 ${bcz}" rpy="0 0 0"/>
			<geometry name="pioneer_geom">
				<mesh filename="${mesh_directory}/chassis.stl"/>
			</geometry>
		</visual>

		<collision>
			<origin xyz="-0.045 0 ${bcz}" rpy="0 0 0"/>
			<geometry>
				<mesh filename="${mesh_directory}/chassis.stl" scale="1.01 1.01 1.01"/>
			</geometry>
		</collision>
	</link>
	<gazebo reference="base_center">
		 	<material value="Gazebo/Yellow"/>
	</gazebo>


  <link name="sensor_link">
	
    <visual>
      <geometry>
        <box size="0.05 0.1 0.1"/>
      </geometry>
    </visual>
	
    <inertial>
      <origin xyz="0 0 1" rpy="0 0 0"/>
      <mass value="0.5"/>
      <inertia
        ixx="1.0" ixy="0.0" ixz="0.0"
        iyy="1.0" iyz="0.0"
        izz="1.0"/>
    </inertial>
 
  </link>

  <gazebo reference="sensor_link">
		<material value="Gazebo/Blue"/>
	</gazebo>

	<joint name="sensor_joint" type="fixed">
		<parent link="base_center" />
		<child link="sensor_link" />
		<origin xyz="0.39 0 0.215" rpy="0 0 0"/>
	</joint>




    <gazebo reference="base_center">
        <sensor type="ray" name="laser">
        <pose>0.39 0 0.215 0 0 0</pose>
        <visualize>true</visualize>
        <update_rate>40</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1</resolution>
              <min_angle>-1.57</min_angle>
              <max_angle>1.57</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.1</min>
            <max>30.0</max>
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>

            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
          <topicName>/laser/scan</topicName>
          <frameName>base_center</frameName>
        </plugin>
      </sensor>
    </gazebo>
    
      <gazebo reference="sensor_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_plugin" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>sensor_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
	


  <!--IMU-->
  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>base_center</bodyName>
      <topicName>imu</topicName>
      <serviceName>imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>150.0</updateRate>
    </plugin>
  </gazebo>

<gazebo>
<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
</plugin>
</gazebo>




</robot>
